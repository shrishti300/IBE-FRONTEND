import React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { APPDispatch, RootState } from "../../../../redux/store/store";
import { showSnackbar } from "../../../../redux/slice/SnackbarSlice";
import Calender from "../../../BookingForm/SelectDate/Calender";
import "./RoomFormCalendar.scss";
import { IStyling } from "../../../BookingForm/SelectDate/SelectDate";
import { FormattedMessage } from "react-intl";


export default function RoomFormCalendar() {

  const styling : IStyling = {
    name: "RoomForm"
  }
  const [isVisible, setIsVisible] = useState(false);
  const { startDate, endDate } = useSelector((state: RootState) => state.bookingFormList);
  const { propertyName } = useSelector(
    (state: RootState) => state.bookingFormList
  );
  const dispatch = useDispatch<APPDispatch>();

  const toggleVisibility = () => {
    if (propertyName.length > 0) setIsVisible(!isVisible);
    else {
      dispatch(
        showSnackbar({
          type: "fail",
          message: "Please select the property first",
        })
      );
    }
  };

  const startDateP = new Date(startDate),
    endDateP = new Date(endDate);
    let startDateMonth = startDateP.getMonth() + 1, endDateMonth = endDateP.getMonth() + 1;
    if(startDateMonth === 13) startDateMonth = 1;
    if(endDateMonth === 13) endDateMonth = 1;
  const startDateShow = `${startDateP
    .getDate()
    .toString()
    .padStart(2, "0")}/${startDateMonth
    .toString()
    .padStart(2, "0")}/${startDateP.getFullYear().toString()}`;
  const endDateShow = `${endDateP
    .getDate()
    .toString()
    .padStart(2, "0")}/${endDateMonth
    .toString()
    .padStart(2, "0")}/${endDateP.getFullYear().toString()}`;

  return (
    <div className="roomsPagedate">
      <div className="roomsPageCheckin">
        <p className="check-in-between"><FormattedMessage id="app.checkinbetween"  defaultMessage="Check In between" />
</p>
        <p className="start-date-show" style={{fontWeight: 'bold'}}>{startDateShow}</p>
      </div>
      <div className="separator-dates"></div>
      <div className="roomsPageCheckout">
        <p className="check-out-between"><FormattedMessage id="app.checkoutbetween" defaultMessage="Check Out between" />
</p>
        <p className="end-date-show" style={{fontWeight: 'bold'}}>{endDateShow}</p>
      </div>
      <button onClick={toggleVisibility} className="date-calender-icon">
        <svg
          width="16"
          height="16"
          viewBox="0 0 16 16"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M7.99992 12.667C8.13177 12.667 8.26067 12.6279 8.3703 12.5546C8.47993 12.4814 8.56538 12.3773 8.61584 12.2554C8.6663 12.1336 8.6795 11.9996 8.65378 11.8703C8.62805 11.7409 8.56456 11.6222 8.47132 11.5289C8.37809 11.4357 8.2593 11.3722 8.12998 11.3465C8.00066 11.3207 7.86661 11.3339 7.7448 11.3844C7.62298 11.4349 7.51886 11.5203 7.44561 11.6299C7.37235 11.7396 7.33325 11.8685 7.33325 12.0003C7.33325 12.1771 7.40349 12.3467 7.52851 12.4717C7.65354 12.5968 7.82311 12.667 7.99992 12.667ZM11.3333 12.667C11.4651 12.667 11.594 12.6279 11.7036 12.5546C11.8133 12.4814 11.8987 12.3773 11.9492 12.2554C11.9996 12.1336 12.0128 11.9996 11.9871 11.8703C11.9614 11.7409 11.8979 11.6222 11.8047 11.5289C11.7114 11.4357 11.5926 11.3722 11.4633 11.3465C11.334 11.3207 11.1999 11.3339 11.0781 11.3844C10.9563 11.4349 10.8522 11.5203 10.7789 11.6299C10.7057 11.7396 10.6666 11.8685 10.6666 12.0003C10.6666 12.1771 10.7368 12.3467 10.8618 12.4717C10.9869 12.5968 11.1564 12.667 11.3333 12.667ZM11.3333 10.0003C11.4651 10.0003 11.594 9.96123 11.7036 9.88797C11.8133 9.81472 11.8987 9.7106 11.9492 9.58878C11.9996 9.46696 12.0128 9.33292 11.9871 9.2036C11.9614 9.07428 11.8979 8.95549 11.8047 8.86225C11.7114 8.76902 11.5926 8.70553 11.4633 8.6798C11.334 8.65408 11.1999 8.66728 11.0781 8.71774C10.9563 8.7682 10.8522 8.85365 10.7789 8.96328C10.7057 9.07291 10.6666 9.2018 10.6666 9.33366C10.6666 9.51047 10.7368 9.68004 10.8618 9.80506C10.9869 9.93009 11.1564 10.0003 11.3333 10.0003ZM7.99992 10.0003C8.13177 10.0003 8.26067 9.96123 8.3703 9.88797C8.47993 9.81472 8.56538 9.7106 8.61584 9.58878C8.6663 9.46696 8.6795 9.33292 8.65378 9.2036C8.62805 9.07428 8.56456 8.95549 8.47132 8.86225C8.37809 8.76902 8.2593 8.70553 8.12998 8.6798C8.00066 8.65408 7.86661 8.66728 7.7448 8.71774C7.62298 8.7682 7.51886 8.85365 7.44561 8.96328C7.37235 9.07291 7.33325 9.2018 7.33325 9.33366C7.33325 9.51047 7.40349 9.68004 7.52851 9.80506C7.65354 9.93009 7.82311 10.0003 7.99992 10.0003ZM12.6666 2.00033H11.9999V1.33366C11.9999 1.15685 11.9297 0.987279 11.8047 0.862254C11.6796 0.73723 11.5101 0.666992 11.3333 0.666992C11.1564 0.666992 10.9869 0.73723 10.8618 0.862254C10.7368 0.987279 10.6666 1.15685 10.6666 1.33366V2.00033H5.33325V1.33366C5.33325 1.15685 5.26301 0.987279 5.13799 0.862254C5.01297 0.73723 4.8434 0.666992 4.66659 0.666992C4.48977 0.666992 4.32021 0.73723 4.19518 0.862254C4.07016 0.987279 3.99992 1.15685 3.99992 1.33366V2.00033H3.33325C2.80282 2.00033 2.29411 2.21104 1.91904 2.58611C1.54397 2.96118 1.33325 3.46989 1.33325 4.00033V13.3337C1.33325 13.8641 1.54397 14.3728 1.91904 14.7479C2.29411 15.1229 2.80282 15.3337 3.33325 15.3337H12.6666C13.197 15.3337 13.7057 15.1229 14.0808 14.7479C14.4559 14.3728 14.6666 13.8641 14.6666 13.3337V4.00033C14.6666 3.46989 14.4559 2.96118 14.0808 2.58611C13.7057 2.21104 13.197 2.00033 12.6666 2.00033ZM13.3333 13.3337C13.3333 13.5105 13.263 13.68 13.138 13.8051C13.013 13.9301 12.8434 14.0003 12.6666 14.0003H3.33325C3.15644 14.0003 2.98687 13.9301 2.86185 13.8051C2.73682 13.68 2.66659 13.5105 2.66659 13.3337V7.33366H13.3333V13.3337ZM13.3333 6.00033H2.66659V4.00033C2.66659 3.82351 2.73682 3.65395 2.86185 3.52892C2.98687 3.4039 3.15644 3.33366 3.33325 3.33366H3.99992V4.00033C3.99992 4.17714 4.07016 4.34671 4.19518 4.47173C4.32021 4.59675 4.48977 4.66699 4.66659 4.66699C4.8434 4.66699 5.01297 4.59675 5.13799 4.47173C5.26301 4.34671 5.33325 4.17714 5.33325 4.00033V3.33366H10.6666V4.00033C10.6666 4.17714 10.7368 4.34671 10.8618 4.47173C10.9869 4.59675 11.1564 4.66699 11.3333 4.66699C11.5101 4.66699 11.6796 4.59675 11.8047 4.47173C11.9297 4.34671 11.9999 4.17714 11.9999 4.00033V3.33366H12.6666C12.8434 3.33366 13.013 3.4039 13.138 3.52892C13.263 3.65395 13.3333 3.82351 13.3333 4.00033V6.00033ZM4.66659 10.0003C4.79844 10.0003 4.92733 9.96123 5.03697 9.88797C5.1466 9.81472 5.23205 9.7106 5.28251 9.58878C5.33296 9.46696 5.34617 9.33292 5.32044 9.2036C5.29472 9.07428 5.23122 8.95549 5.13799 8.86225C5.04475 8.76902 4.92597 8.70553 4.79665 8.6798C4.66733 8.65408 4.53328 8.66728 4.41146 8.71774C4.28965 8.7682 4.18553 8.85365 4.11227 8.96328C4.03902 9.07291 3.99992 9.2018 3.99992 9.33366C3.99992 9.51047 4.07016 9.68004 4.19518 9.80506C4.32021 9.93009 4.48977 10.0003 4.66659 10.0003ZM4.66659 12.667C4.79844 12.667 4.92733 12.6279 5.03697 12.5546C5.1466 12.4814 5.23205 12.3773 5.28251 12.2554C5.33296 12.1336 5.34617 11.9996 5.32044 11.8703C5.29472 11.7409 5.23122 11.6222 5.13799 11.5289C5.04475 11.4357 4.92597 11.3722 4.79665 11.3465C4.66733 11.3207 4.53328 11.3339 4.41146 11.3844C4.28965 11.4349 4.18553 11.5203 4.11227 11.6299C4.03902 11.7396 3.99992 11.8685 3.99992 12.0003C3.99992 12.1771 4.07016 12.3467 4.19518 12.4717C4.32021 12.5968 4.48977 12.667 4.66659 12.667Z"
            fill="black"
          />
        </svg>
      </button>
      {isVisible && <Calender toggleVisibility={toggleVisibility} styling={styling} />}
    </div>
  );
}
